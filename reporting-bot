#!/usr/bin/env/python

import asyncio
import logging
import os
import time

import environ
from psycopg2 import OperationalError

from reporting_bot import Config, ReportLoggingBot

if __name__ == '__main__':
    config: Config = environ.to_config(Config)
    LOGLEVEL = os.environ.get('LOGLEVEL', 'INFO').upper()
    logging.basicConfig(level=LOGLEVEL)

    logger = logging.getLogger(__name__)


    logger.debug(config.db_connection_string)

    while True:
        try:
            logger.debug('Creating Bot')
            bot = ReportLoggingBot(config)
        except psycopg2.OperationalError as err:
            logger.warning('Could not connect to database')
            logger.warning(err)

            logger.warning('Retrying in 30 seconds')

            # Try again in 30 seconds
            time.sleep(30)
            continue

        # Split into separate try, to ensure database connection deconstruction
        try:
            logger.debug('Polling event info')
            asyncio.run(bot.poll_events())
        finally:
            # Make sure the bot gets deconstructed and the database connection with it
            del bot
        logger.debug('Going to sleep again')
        time.sleep(300)
